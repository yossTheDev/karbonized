name: Build/release Electron app

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install

      - name: build-linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux

      - name: build-mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.os == 'macos-latest'
        run: npm run build:mac

      - name: build-win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        
      - name: Get tag name
        run: echo ::set-output name=tag_name::$(basename ${{ github.ref }}) 
        id: tag

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            release/${{steps.tag.outputs.tag_name}}/*.exe 
            release/${{steps.tag.outputs.tag_name}}/*.zip
            release/${{steps.tag.outputs.tag_name}}/*.dmg
            release/${{steps.tag.outputs.tag_name}}/*.AppImage
            release/${{steps.tag.outputs.tag_name}}/*.snap
            release/${{steps.tag.outputs.tag_name}}/*.deb
            release/${{steps.tag.outputs.tag_name}}/*.rpm
            release/${{steps.tag.outputs.tag_name}}/*.tar.gz
            release/${{steps.tag.outputs.tag_name}}/*.yml
            release/${{steps.tag.outputs.tag_name}}/*.blockmap
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
